{"version":3,"sources":["components/AddCategoty.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetxhGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","category","value","type","placeholder","onChange","target","GifGridItem","images","className","title","src","url","alt","getGif","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertAPP","initialState","categories","setCategories","element","initialCategories","App","ReactDOM","render","document","getElementById"],"mappings":"8KA0BeA,MAvBf,YAAoC,IAAdC,EAAa,EAAbA,YAAa,EAEEC,mBAAS,IAFX,mBAExBC,EAFwB,KAEbC,EAFa,KAW/B,OACI,sBAAMC,SANS,SAACC,GAChBA,EAAEC,iBACcN,EAAH,KAAbE,EAA4B,SAAAK,GAAQ,mBAAMA,IAAuB,SAAAA,GAAQ,OAAGL,GAAH,mBAAiBK,MAC1FJ,EAAc,KAGd,SACI,uBAAQK,MAASN,EAAYO,KAAK,OAAOC,YAAY,8BAA2BC,SAVrE,SAACN,GAChBF,EAAcE,EAAEO,OAAOJ,aCOhBK,MAVf,YAA+B,IAATC,EAAQ,EAARA,OAClB,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKD,EAAOE,QACZ,qBAAKC,IAAKH,EAAOI,IAAKC,IAAI,iB,wBCRzBC,EAAM,uCAAE,WAAMb,GAAN,uBAAAc,EAAA,6DACXC,EADW,0FAC4EC,UAAUhB,GADtF,sBAECiB,MAAMF,GAFP,cAEXG,EAFW,gBAGGA,EAAKC,OAHR,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAChB,MACI,CACIC,GAAGD,EAAIC,GACPf,MAAMc,EAAId,MACVE,IAAIY,EAAIhB,OAAOkB,iBAAiBd,QAT3B,kBAcVU,GAdU,4CAAF,sD,KC4BJK,MAxBf,YAA6B,IAAX1B,EAAU,EAAVA,SAAU,ECDF,SAACA,GAAY,IAAD,EACTN,mBAAS,CAC9B0B,KAAK,GACLO,SAAQ,IAHsB,mBAC3BC,EAD2B,KACrBC,EADqB,KAiBlC,OAXAC,qBAAU,WACNjB,EAAOb,GACF+B,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAI1B,CAAC3B,IAEI4B,EDdcK,CAAajC,GAA3BoB,EAFiB,EAEjBA,KACP,OAHwB,EAEZO,QAGJ,oBAAInB,UAAU,mCAAd,yBAIA,eAAC,WAAD,WACI,6BAAKR,IACL,qBAAKQ,UAAU,YAAf,SACaY,EAAKE,KAAI,SAAAC,GACN,OACI,cAAC,EAAD,CAA0BhB,OAAQgB,GAAhBA,EAAIC,aEU3CU,MAzBf,YAAsC,IAAfC,EAAc,EAAdA,aAAc,EACAzC,mBAASyC,GADT,mBAC1BC,EAD0B,KACfC,EADe,KAEjC,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAa5C,YAAc4C,IAC3B,uBAEA,6BAEQD,EAAWd,KAAI,SAAAgB,GACX,OACI,cAAC,EAAD,CAEItC,SAAUsC,GADLA,YCZ/BC,EAAkB,GACxB,SAASC,IACL,OACI,cAAC,EAAD,CAAcL,aAAcI,IAIpCE,IAASC,OAAO,cAACF,EAAD,IAASG,SAASC,eAAe,U","file":"static/js/main.3e80a546.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({setCategory}){\r\n    \r\n    const [inputValue,setInputValue]=useState('');\r\n    const handleChange=(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        inputValue===''?setCategory(category=>[...category]):setCategory(category=>[inputValue,...category])\r\n        setInputValue('');\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input  value = {inputValue} type='text' placeholder='Digite aquÃ­ la categoria' onChange={handleChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategory:PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default AddCategory;","import React from 'react';\r\n\r\n\r\n\r\nfunction GifGridItem({images}){\r\n    return(\r\n        <div className=\"card\">\r\n            <h1>{images.title}</h1>\r\n            <img src={images.url} alt='Gif post'/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGridItem;","export const getGif= async(category)=>{\r\n    const URL=`https://api.giphy.com/v1/gifs/search?api_key=MB1x9P4JmqhMZdANexrMKSB1z0Xq07QT&q=${encodeURI(category)}&limit=10`\r\n    const resp= await fetch(URL);\r\n    const {data}= await resp.json();\r\n    const gifs=data.map(img=>{\r\n        return(\r\n            {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images.downsized_medium.url,\r\n            }\r\n\r\n        )\r\n    })  \r\n    return gifs;\r\n}","import React, { Fragment,  useEffect,  useState } from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetxhGifs';\r\nimport '../../src/index.css'\r\nfunction GifGrid({category}){\r\n    \r\n    const {data,loading}=useFetchGifs(category);\r\n    if(loading){\r\n        return(\r\n            <h1 className=\"animate__animated animate__flash\">Loading... </h1>\r\n        );\r\n    }else{\r\n        return(\r\n            <Fragment>\r\n                <h3>{category}</h3> \r\n                <div className=\"card-grid\">\r\n                            {data.map(img=>{\r\n                                return(\r\n                                    <GifGridItem key={img.id} images={img}/>\r\n                                )\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default GifGrid;","import { useState,useEffect } from \"react\"\r\nimport {getGif} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGif(category)\r\n            .then(imgs=>{\r\n                    setState({\r\n                        data:imgs, \r\n                        loading:false,    \r\n                    })     \r\n            })\r\n \r\n    },[category] ) \r\n    \r\n    return state;\r\n}","import React, { Fragment,  useState } from 'react';\r\nimport AddCategory from './AddCategoty'\r\nimport GifGrid from './GifGrid';\r\nfunction GifExpertAPP({initialState}){\r\n    const [categories,setCategories]=useState(initialState);\r\n    return(\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={ setCategories } />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(element=>{\r\n                        return(\r\n                            <GifGrid \r\n                                key={element} \r\n                                category={element}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertAPP;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertAPP from './components/GifExpertApp';\r\nimport '../src/index.css'\r\nconst initialCategories=[];\r\nfunction App(){\r\n    return(\r\n        <GifExpertAPP initialState={initialCategories} />\r\n    );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}